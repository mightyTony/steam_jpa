name: CICD - GitHub Actions CI & Deploy to EC2

on:
  push:
    branches: ["master"]

permissions:
  contents: read

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 캐싱
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle 실행 권한 부여
        run: chmod +x gradlew

      - name: Build (테스트 제외)
        run: ./gradlew clean build -x test

      - name: DockerHub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 빌드 & 푸시
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_REPO }}

  deploy:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: EC2 서버로 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          port: 22
          key: ${{ secrets.EC2_KEY }}
          script: |
            mkdir -p ~/infra

            echo "${{ secrets.DOCKER_COMPOSE_YML_BASE64 }}" | base64 -d > ~/infra/docker-compose.yml
            echo "${{ secrets.APPLICATION_PROD_YML_BASE64 }}" | base64 -d > ~/infra/application-prod.yml
            echo "${{ secrets.PROMETHEUS_YML_BASE64 }}" | base64 -d > ~/infra/prometheus.yml

            cd ~/infra

            docker-compose down --remove-orphans
            docker-compose pull
            docker-compose up -d

            docker image prune -f
