plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.8'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // core
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // security + jwt
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    implementation("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")
    // oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // data
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    runtimeOnly 'com.mysql:mysql-connector-j'
    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // swagger
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2")
    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    compileOnly 'org.projectlombok:lombok'

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

/* 없어도 돌아가는 부분
// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(generated)
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += "$projectDir/build/generated"
}
*/

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}